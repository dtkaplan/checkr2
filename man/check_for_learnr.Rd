% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_for_learnr.R
\name{check_for_learnr}
\alias{check_for_learnr}
\title{Interface for checking learnr exercises.}
\usage{
check_for_learnr(label = NULL, user_code = NULL, solution_code = NULL,
  check_code = NULL, envir_result = NULL, evaluate_result = NULL, ...,
  debug = FALSE)
}
\arguments{
\item{label}{argument passed by learnr system}

\item{user_code}{ditto}

\item{solution_code}{ditto}

\item{check_code}{ditto}

\item{envir_result}{ditto}

\item{evaluate_result}{ditto}

\item{...}{ditto}

\item{debug}{development flag to turn on logging of the information sent by learnr. This
must be set at compile time, it's not for users.}
}
\description{
When using learnr, the check statements should \emph{NOT} be wrapped with \code{check().}
Instead, put the \code{if_matches()} functions directly in the check-chunk. The \code{ex} argument
to \code{if_matches()} should be literally \code{USER_CODE}.
}
\examples{
# as it would be called from the learnr system ...
check_for_learnr(envir_result = 3, label = "first", user_code = "sin(pi)",
  check_code = 'ex <- for_checkr(USER_CODE); t1 <- line_where(ex, F == sin, message="Please use the sin function.");a1 <- arg_number(t1, 1); line_value(a1, passif(V == pi, "Right-oh!"))'
)

#'
}
